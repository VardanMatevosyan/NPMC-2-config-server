server.port=3000

#resource server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${oauth0-host}/
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${oauth0-host}/.well-known/jwks.json
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${oauth0-host}/.well-known/openid-configuration

##client configuration
# We should enable this client configs if we would need
# our spring application to act as a OAuth Client
# in this case we don't need SPA call any requests to our Authorization Server
# to get the state, code, access token, refresh token and so on
# this all operation our spring app will handle itself
# but need to know that in this case we don't have any token in the request from our browser
# but the session information.
# Spring application will store Access token or Id token stores by default in memory and associate it with the session.
# To put it simple the Spring app will get the token by the session info maybe by session id
# So it is recommended to use JdbcOAuth2AuthorizedClientService instead of InMemoryOAuth2AuthorizedClientService
# and save the session and token info in database, maybe in cache
# because after the app reloads it will remove all the session association with token and token itself
# that was in memory and therefore will force users to re-login.

#spring.security.oauth2.client.registration.auth0.client-id=${client-id}
#spring.security.oauth2.client.registration.auth0.client-secret=${client-secret}
#spring.security.oauth2.client.registration.auth0.scope=openid,email,profile,picture
#spring.security.oauth2.client.registration.auth0.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.auth0.redirect-uri=http://localhost:3000/login/oauth2/code/auth0

#provider
#spring.security.oauth2.client.provider.auth0.issuer-uri=${oauth0-host}/
#spring.security.oauth2.client.provider.auth0.authorization-uri=${oauth0-host}/authorize
#spring.security.oauth2.client.provider.auth0.user-info-uri=${oauth0-host}/userinfo
#spring.security.oauth2.client.provider.auth0.token-uri=${oauth0-host}/oauth/token
#spring.security.oauth2.client.provider.auth0.user-name-attribute=email

